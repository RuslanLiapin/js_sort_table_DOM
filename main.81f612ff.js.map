{"version":3,"sources":["scripts/main.js"],"names":["table","document","querySelector","headers","querySelectorAll","tbody","forEach","header","addEventListener","index","indexOf","sortedRows","sort","a","b","aValue","textContent","bValue","parseInt","parseFloat","replace","localeCompare","innerHTML","row","appendChild"],"mappings":";AAAA,aAMA,SAAA,EAAA,GAAA,OAAA,EAAA,IAAA,EAAA,IAAA,EAAA,IAAA,IAAA,SAAA,IAAA,MAAA,IAAA,UAAA,wIAAA,SAAA,EAAA,EAAA,GAAA,GAAA,EAAA,CAAA,GAAA,iBAAA,EAAA,OAAA,EAAA,EAAA,GAAA,IAAA,EAAA,OAAA,UAAA,SAAA,KAAA,GAAA,MAAA,GAAA,GAAA,MAAA,WAAA,GAAA,EAAA,cAAA,EAAA,EAAA,YAAA,MAAA,QAAA,GAAA,QAAA,EAAA,MAAA,KAAA,GAAA,cAAA,GAAA,2CAAA,KAAA,GAAA,EAAA,EAAA,QAAA,GAAA,SAAA,EAAA,GAAA,GAAA,oBAAA,QAAA,OAAA,YAAA,OAAA,GAAA,OAAA,MAAA,KAAA,GAAA,SAAA,EAAA,GAAA,GAAA,MAAA,QAAA,GAAA,OAAA,EAAA,GAAA,SAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,UAAA,EAAA,EAAA,QAAA,IAAA,IAAA,EAAA,EAAA,EAAA,IAAA,MAAA,GAAA,EAAA,EAAA,IAAA,EAAA,GAAA,EAAA,GAAA,OAAA,EAJA,IAAMA,EAAQC,SAASC,cAAc,SAC/BC,EAAUH,EAAMI,iBAAiB,MACjCC,EAAQL,EAAME,cAAc,SAElCC,EAAQG,QAAQ,SAAAC,GACdA,EAAOC,iBAAiB,QAAS,WACzBC,IAAAA,EAAQ,EAAIN,GAASO,QAAQH,GAI7BI,EAFWN,EAAAA,EAAMD,iBAAiB,OAEhBQ,KAAK,SAACC,EAAGC,GACzBC,IAAAA,EAASF,EAAET,iBAAiB,MAAMK,GAAOO,YACzCC,EAASH,EAAEV,iBAAiB,MAAMK,GAAOO,YAE3CP,OAAU,IAAVA,EACKS,SAASH,GAAUG,SAASD,GAChB,IAAVR,EACIU,WAAWJ,EAAOK,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAChDD,WAAWF,EAAOG,QAAQ,IAAK,IAAIA,QAAQ,IAAK,KAItDL,EAAOM,cAAcJ,KAIhCZ,EAAMiB,UAAY,GAElBX,EAAWL,QAAQ,SAAAiB,GACjBlB,EAAMmB,YAAYD","file":"main.81f612ff.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nconst table = document.querySelector('table');\nconst headers = table.querySelectorAll('th');\nconst tbody = table.querySelector('tbody');\n\nheaders.forEach(header => {\n  header.addEventListener('click', () => {\n    const index = [...headers].indexOf(header);\n\n    const rows = [...tbody.querySelectorAll('tr')];\n\n    const sortedRows = rows.sort((a, b) => {\n      const aValue = a.querySelectorAll('td')[index].textContent;\n      const bValue = b.querySelectorAll('td')[index].textContent;\n\n      if (index === 2) {\n        return parseInt(aValue) - parseInt(bValue);\n      } else if (index === 3) {\n        const aNum = parseFloat(aValue.replace('$', '').replace(',', ''));\n        const bNum = parseFloat(bValue.replace('$', '').replace(',', ''));\n\n        return aNum - bNum;\n      } else {\n        return aValue.localeCompare(bValue);\n      }\n    });\n\n    tbody.innerHTML = '';\n\n    sortedRows.forEach(row => {\n      tbody.appendChild(row);\n    });\n  });\n});\n"]}